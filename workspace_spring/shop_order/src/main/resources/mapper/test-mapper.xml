<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<!-- namespace에는 xml파일과 연결할 Mapper interface 파일명을 패키지를 포함하여 적어주세요 -->
<mapper namespace="com.green.shop_order.mapper.TestMapper">
    <!--
    <resultMap /> 는 조회 결과 데이터를 자바로 가져오기 위해 가져올 자료형을 직접 커스터마이징하는 기능
    column == 실제 데이터 베이스의 컬럼명
    property == 조회 되는 컬럼명을 DTO 의 어떤 변수에 담아올지 정해주는 변수명 작성
    result 태그의 column에는 데이터 베이스에서 "조회되는 컬럼명"을 작성
    result 태그의 property에는 조회되는 컬럼의 값을 자바로 가져올 변수명 작성
    resultMap 태그의 type 에는 변수들이 선언된 DTO 클래스를 작성(패키지명 포함)
    -->
    <resultMap id="emp" type="EmpDTO">
        <id column="EMPNO"          property="empno"/>
        <result column="ENAME"      property="ename"/>
        <result column="JOB"        property="job"/>
        <result column="MGR"        property="mgr"/>
        <result column="HIREDATE"   property="hiredate"/>
        <result column="SALARY"     property="sal"/>
        <result column="COMM"       property="comm"/>
        <result column="DEPTNO"     property="deptno"/>

        <association property="deptDTO" javaType="DeptDTO">
            <result column="DEPTNO" property="deptno"/>
            <result column="DNAME"  property="dname"/>
            <result column="LOC"    property="loc"/>
        </association>

    </resultMap>



    <!--
        select 태그는 조회한 결과 한 행의 데이터를 자바로 가져오는 방식을 지정해줘야함
        그 방식은 resultType 을 사용하는 방법, resultMap을 사용하는 방법
        단, resultMap 은 join 결과를 가져올 때 용이한 방법

        resultType : 상대적으로 코드량이 적고 간편하다, 그러나 조인 결과를 불러오는 건 불가능
        resultMap :  상대적으로 코드량이 많다 , 조인 결과 불러오기 가능
    -->
    <select id="getEmpList" resultMap="emp">
        SELECT EMPNO, ENAME, SAL, E.DEPTNO, DNAME, LOC
        FROM emp E JOIN dept D
        ON E.DEPTNO = D.DEPTNO;
    </select>

    <select id="getBoardList" resultMap="board">
        SELECT * FROM BOARD
    </select>

    <select id="getBoard" resultMap="board">
        SELECT BOARD_NUM, TITLE, WRITER
        FROM BOARD
        WHERE BOARD_NUM = #{boardNum}
    </select>

    <resultMap id="board" type="BoardDTO">
        <id column="BOARD_NUM"  property="boardNum"/>
        <result column="TITLE"      property="title"/>
        <result column="WRITER"     property="writer"/>
        <result column="CONTENT"    property="content"/>
        <result column="READ_CNT"   property="readCnt"/>
        <result column="REG_DATE"   property="regDate"/>

        <collection property="replyList" ofType="ReplyDTO">
            <id column="REPLY_NUM"      property="replyNum"/>
            <result column="REPLY_CONTENT"  property="replyContent"/>
            <result column="REPLY_WRITER"   property="replyWriter"/>
            <result column="REPLY_REG_DATE" property="replyRegDate"/>
            <result column="BOARD_NUM"      property="boardNum"/>
        </collection>
    </resultMap>

    <select id="joinList" resultMap="board">
        SELECT
        B.BOARD_NUM
        ,TITLE
        ,WRITER
        ,REPLY_CONTENT
        ,REPLY_WRITER
        FROM BOARD B INNER JOIN BOARD_REPLY R
        ON B.BOARD_NUM = R.BOARD_NUM
    </select>
</mapper>































